version: '3.9'
name: "qft"

services:
  kong:
    container_name: qft-kong
    image: kong:2.1
    restart: unless-stopped
    ports:
      - ${KONG_HTTP_PORT}:8000/tcp
      - ${KONG_HTTPS_PORT}:8443/tcp
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      # https://github.com/supabase/cli/issues/14
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors
    volumes:
      - ./kong.yml:/var/lib/kong/kong.yml
    networks:
      - qftNetwork

  qft-ui:
    container_name: qft-ui
    build:
      context: ../client
      dockerfile: Dockerfile
      args:
        SUPABASE_URL: "${NEXT_PUBLIC_SUPABASE_URL}"
        SUPABASE_ANON_KEY: "${NEXT_PUBLIC_SUPABASE_ANON_KEY}"
        STORAGE_URL: "${NEXT_PUBLIC_STORAGE_URL}"
        STRIPE_PUBLIC_KEY: "${NEXT_PUBLIC_STRIPE_PUBLIC_KEY}"
        SERVER_URL: "${NEXT_PUBLIC_SERVER_URL}"
        SSR_SERVER_URL: "${NEXT_PUBLIC_SSR_SERVER_URL}"
        GO_AUTH_SERVER_URL: "${NEXT_PUBLIC_GO_AUTH_SERVER_URL}"
    ports:
      - 3000:3000
    stdin_open: true
    depends_on:
      - qft-api
    networks:
      - qftNetwork

  go-auth:
    container_name: go-auth-api
    image: overlord077/goauth
    env_file:
      - .env
    environment:
      POSTGRES_DSN: "user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=${POSTGRES_HOST} port=${POSTGRES_PORT} dbname=${POSTGRES_DB}"
      PORT: "${GO_AUTH_PORT}"
    ports:
      - 8080:${GO_AUTH_PORT}
    restart: on-failure
    depends_on:
      - postgresdb
    networks:
      - qftNetwork

  qft-api:
    container_name: qft-api
    build:
      context: ../server
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_DSN: "user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=${POSTGRES_HOST} port=${POSTGRES_PORT} dbname=${POSTGRES_DB}"
      PORT: "${QFT_API_PORT}"
    ports:
      - 8081:${QFT_API_PORT}
    restart: on-failure
    depends_on:
      - postgresdb
    networks:
      - qftNetwork

  postgresdb:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    networks:
      - qftNetwork
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
      
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    networks:
      - qftNetwork
    volumes:
      - pgadmin-data:/var/lib/pgadmin

networks:
  qftNetwork:
    driver: bridge

volumes: 
  pgdata:
  pgadmin-data: