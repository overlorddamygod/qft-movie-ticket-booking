version: '3.9'
name: "QFT"

services:
  kong:
    container_name: qft-kong
    image: kong:2.1
    restart: unless-stopped
    ports:
      - ${KONG_HTTP_PORT}:8000/tcp
      - ${KONG_HTTPS_PORT}:8443/tcp
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      # https://github.com/supabase/cli/issues/14
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors
    volumes:
      - ./kong.yml:/var/lib/kong/kong.yml
    networks:
      - qftNetwork

  goAuth:
    container_name: go-auth-api
    image: overlord077/goauth
    env_file:
      - .env
    environment:
      POSTGRES_DSN: "user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=${POSTGRES_HOST} port=${POSTGRES_PORT} dbname=${POSTGRES_DB}"
      PORT: "${GO_AUTH_PORT}"
    ports:
      - 8080:${GO_AUTH_PORT}
    restart: on-failure
    depends_on:
      - postgresdb
    networks:
      - qftNetwork

  qftApi:
    container_name: qft-api
    image: overlord077/qft
    env_file:
      - .env
    environment:
      POSTGRES_DSN: "user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=${POSTGRES_HOST} port=${POSTGRES_PORT} dbname=${POSTGRES_DB}"
      PORT: "${QFT_API_PORT}"
    ports:
      - 8081:${QFT_API_PORT}
    restart: on-failure
    depends_on:
      - postgresdb
    networks:
      - qftNetwork

  postgresdb:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    networks:
      - qftNetwork
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

networks:
  qftNetwork:
    driver: bridge